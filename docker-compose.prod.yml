version: '3.7'
services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn conf.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./staticfiles:/app/web/staticfiles
      - ./mediafiles:/app/web/mediafiles
      - ./app:/app/web
    expose:
      - 8000
    env_file:
      - envs/prod/.env.prod

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - ./staticfiles:/app/web/staticfiles
      - ./mediafiles:/app/web/mediafiles
    depends_on:
      - web

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    user: "0"
    volumes:
      - ./data/grafana:/var/lib/grafana
    env_file:
      - envs/prod/.env.prod

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081
    environment:
      ENABLE_METRICS: 'true'

  celery:
    build: ./app
    command: celery -A conf worker -l INFO
    volumes:
      - ./app:/app/web
      - ./mediafiles:/app/web/mediafiles
    env_file:
      - envs/prod/.env.prod
    depends_on:
      - redis

  celery-beat:
    build: ./app
    command: celery -A conf beat -l INFO
    volumes:
      - ./app:/app/web
      - ./mediafiles:/app/web/mediafiles
    env_file:
      - envs/prod/.env.prod
    depends_on:
      - redis

  dashboard:
    image: mher/flower
    ports:
      - 5555:5555
    env_file:
      - envs/prod/.env.prod

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "4444:80"
    env_file:
      - envs/prod/.env.prod
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  get_voltages_task:
    build: ./app
    command: python main/tasks/get_voltages_task.py
    env_file:
      - envs/prod/.env.prod
    depends_on:
      - web

  get_status_ex_task:
    build: ./app
    command: python main/tasks/get_status_ex_task.py
    env_file:
      - envs/prod/.env.prod
    depends_on:
      - web

volumes:
  pgadmin-data:
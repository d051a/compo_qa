version: '3.7'
services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    command: gunicorn conf.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./staticfiles:/app/web/staticfiles
      - ./mediafiles:/app/web/mediafiles
      - ./app:/app/web
    expose:
      - 8000
    env_file:
      - envs/dev/.env.dev
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    env_file:
      - envs/dev/.env.dev.db

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - ./staticfiles:/app/web/staticfiles
      - ./mediafiles:/app/web/mediafiles
    depends_on:
      - web

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    user: "0"
    links:
      - db
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - db
    env_file:
      - envs/dev/.env.dev

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081
    environment:
      ENABLE_METRICS: 'true'

  celery:
    build: ./app
    command: celery -A conf worker -l info
    volumes:
      - ./app:/app/web
    env_file:
      - envs/dev/.env.dev
    depends_on:
      - redis

  celery-beat:
    build: ./app
    command: celery -A conf beat -l info
    volumes:
      - ./app:/app/web
    env_file:
      - envs/dev/.env.dev
    depends_on:
      - redis

  dashboard:
    build: ./app
    command:  flower -A conf --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    env_file:
      - envs/dev/.env.dev
    depends_on:
      - web
      - redis
      - celery